/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package viewer;

import com.ColorchangeJtableCell;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.sql.ResultSet;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Lasitha Ranawaka
 */
public class viewAllCustomer extends javax.swing.JDialog {

    /**
     * Creates new form template
     */
    public viewAllCustomer(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        loadclientall();
        changetblPro();
        colorchange();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAll = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(255, 51, 51));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("All Client");
        jLabel1.setOpaque(true);

        tblAll.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NIC", "Name", "Admission No", "V Class", "Reg Date", "StampFees"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAll.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblAll);
        if (tblAll.getColumnModel().getColumnCount() > 0) {
            tblAll.getColumnModel().getColumn(0).setMaxWidth(50);
            tblAll.getColumnModel().getColumn(1).setPreferredWidth(150);
            tblAll.getColumnModel().getColumn(2).setPreferredWidth(300);
            tblAll.getColumnModel().getColumn(3).setPreferredWidth(150);
            tblAll.getColumnModel().getColumn(4).setPreferredWidth(100);
            tblAll.getColumnModel().getColumn(5).setPreferredWidth(100);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1068, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewAllCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewAllCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewAllCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewAllCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                viewAllCustomer dialog = new viewAllCustomer(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAll;
    // End of variables declaration//GEN-END:variables

    private void loadclientall() {
        DefaultTableModel dtm = (DefaultTableModel) tblAll.getModel();
        dtm.setRowCount(0);
        try {
            ResultSet rs = model.db.getData("SELECT\n"
                    + "	FULL.pay_approved, \n"//1
                    + "	customer_register.admission_no, \n"//2
                    + "	customer_register.id, \n"//3
                    + "	uniquecustomerdetails.nic, \n"//4
                    + "	uniquecustomerdetails.namewithinitial, \n"//5
                    + "	customer_register.vehicle_class, \n"//6
                    + "	customer_register.reg_date\n"//7
                    + " FROM\n"
                    + "	uniquecustomerdetails\n"
                    + "	INNER JOIN\n"
                    + "	customer_register\n"
                    + "	ON \n"
                    + "	uniquecustomerdetails.id = customer_register.uniqueCustomerDetails_id\n"
                    + "	LEFT JOIN\n"
                    + "	stampfees_checker AS `FULL`\n"
                    + "	ON \n"
                    + "	FULL.admision_no = customer_register.admission_no\n"
                    + "ORDER BY\n"
                    + "	customer_register.id DESC ");

            while (rs.next()) {
                String id = rs.getString(3);
                String admno = rs.getString(2);
                String nic = rs.getString(4);
                String name = rs.getString(5);
                String Vclass = rs.getString(6);
                String date = rs.getString(7);
                int stampfees = rs.getInt(1);

                boolean stamp;
                if (stampfees == 1) {
                    stamp = true;

                } else {
                    stamp = false;
                }

                Object arr[] = {id, nic, name, admno, Vclass, date, stamp};
                dtm.addRow(arr);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void changetblPro() {
        JTableHeader header = tblAll.getTableHeader();
        header.setBackground(Color.LIGHT_GRAY);
        header.setFont(new Font("Tahoma", Font.BOLD, 15));

        ((DefaultTableCellRenderer) header.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        DefaultTableCellRenderer centercellRenderer = new DefaultTableCellRenderer();
        centercellRenderer.setHorizontalAlignment(JLabel.CENTER);

        //  ColorchangeJtableCell cl = new ColorchangeJtableCell(tblAll,"name", Color.red,1);
        // tblAll.getColumnModel().getColumn(1).setCellRenderer(centercellRenderer);
        //tblmonthinform.getColumnModel().getColumn(1).setCellRenderer(centercellRenderer);
//        DefaultTableCellRenderer rightcellreCellRenderer = new DefaultTableCellRenderer();
//        rightcellreCellRenderer.setHorizontalAlignment(JLabel.RIGHT);
//        tblAll.getColumnModel().getColumn(2).setCellRenderer(rightcellreCellRenderer);
    }

    public void colorchange() {
        tblAll.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override

            public Component getTableCellRendererComponent(
                    JTable table, Object value, boolean isSelected,
                    boolean hasFocus, int row, int column) {

                JLabel label = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                Color c = Color.WHITE;
                Object textto = table.getValueAt(row, 6);
                if (textto.equals(isSelected = true))
                    c = Color.GREEN;
                    label.setBackground(c);
                    tblAll.setSelectionForeground(Color.BLUE);

       ////////////
                    return label;
                

            }
            });
        

    }
}

    


