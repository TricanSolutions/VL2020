/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package viewer;

import com.ConstantData;
import static com.ConstantData.dbConnectionURL;
import com.Messages;
import com.userstatus;
import java.awt.Cursor;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import model.db2;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Lasitha Ranawaka
 */
public class customerRegisternew extends javax.swing.JDialog {

    public customerRegisternew(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        initComponents();
        ImageIcon img = new ImageIcon("src/png/desktop.png");
        this.setIconImage(img.getImage());
        //  loadadmissiono();
        loadcmbdivision();
        loadpolice();
        cmb_Customer_type.grabFocus();

        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date date = new Date();
        String currentyear = dateFormat.format(date);
        txt_medical_date.setText(currentyear);

    }

    int id = 0;
    //String sex = "";
    String canDriveOrNot = "";
    String manualOrAuto = "";
    int uniqueCustomerDetails_id;
    int customerId;
    int divisionId;
    int policeId;
    String imagepath;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        cmbcancantdrive = new javax.swing.JComboBox();
        cmbmanualauto = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        txtlicenno = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtlicenvclass = new javax.swing.JFormattedTextField();
        txtlicendate = new javax.swing.JFormattedTextField();
        jLabel36 = new javax.swing.JLabel();
        txt_old_licence_ex_date = new javax.swing.JFormattedTextField();
        jPanel4 = new javax.swing.JPanel();
        txtadmissiono = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txttp2 = new javax.swing.JFormattedTextField();
        txtadress = new javax.swing.JTextField();
        txtbarcode = new javax.swing.JFormattedTextField();
        txttp3 = new javax.swing.JFormattedTextField();
        txttp1 = new javax.swing.JFormattedTextField();
        txtnic = new javax.swing.JTextField();
        txtname = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtdob = new javax.swing.JFormattedTextField();
        cmbsex = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtnamewithinitials = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtNote = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        cmb_Customer_type = new javax.swing.JComboBox();
        cmb_id_type = new javax.swing.JComboBox();
        jLabel24 = new javax.swing.JLabel();
        txt_country_of_identification = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txt_surname = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txt_height_ft = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        txt_height_inch = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        txt_blood_group = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        cmb_driver_restrictions = new javax.swing.JComboBox();
        jLabel31 = new javax.swing.JLabel();
        cmb_organ_donor = new javax.swing.JComboBox();
        jLabel32 = new javax.swing.JLabel();
        txt_medical_date = new javax.swing.JFormattedTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        txt_police_report_date = new javax.swing.JFormattedTextField();
        lblImage = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        cmb_Other = new javax.swing.JComboBox();
        txtmedicalno = new javax.swing.JFormattedTextField();
        jButton8 = new javax.swing.JButton();
        txtvehicleclass = new javax.swing.JFormattedTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtDivisionalSecretariat = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtpolice = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(0, 255, 204));
        jLabel1.setFont(new java.awt.Font("Adobe Garamond Pro Bold", 0, 33)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("New Customer Register");
        jLabel1.setOpaque(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 153, 153))); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 153, 51));
        jLabel19.setText("Select");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 153, 51));
        jLabel20.setText("Gear");

        cmbcancantdrive.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmbcancantdrive.setForeground(new java.awt.Color(0, 153, 153));
        cmbcancantdrive.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cannot Drive", "Can Drive" }));
        cmbcancantdrive.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbcancantdriveKeyPressed(evt);
            }
        });

        cmbmanualauto.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmbmanualauto.setForeground(new java.awt.Color(0, 153, 153));
        cmbmanualauto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Manual", "Auto" }));
        cmbmanualauto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbmanualautoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addGap(64, 64, 64)
                .addComponent(cmbcancantdrive, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel20)
                .addGap(42, 42, 42)
                .addComponent(cmbmanualauto, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(cmbcancantdrive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(cmbmanualauto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtlicenno.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtlicenno.setForeground(new java.awt.Color(0, 51, 204));
        txtlicenno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtlicennoActionPerformed(evt);
            }
        });
        txtlicenno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtlicennoKeyPressed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 153, 51));
        jLabel18.setText("Vehicle Class");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 153, 51));
        jLabel16.setText("Old Licence No");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 153, 51));
        jLabel17.setText("Licen Date");

        txtlicenvclass.setForeground(new java.awt.Color(0, 51, 204));
        txtlicenvclass.setText("None");
        txtlicenvclass.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtlicenvclass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtlicenvclassActionPerformed(evt);
            }
        });
        txtlicenvclass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtlicenvclassKeyPressed(evt);
            }
        });

        txtlicendate.setForeground(new java.awt.Color(0, 0, 204));
        try {
            txtlicendate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtlicendate.setText("0000-00-00");
        txtlicendate.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtlicendate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtlicendateActionPerformed(evt);
            }
        });
        txtlicendate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtlicendateKeyPressed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(0, 153, 51));
        jLabel36.setText("Old license expiry date");

        txt_old_licence_ex_date.setForeground(new java.awt.Color(0, 0, 204));
        try {
            txt_old_licence_ex_date.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_old_licence_ex_date.setText("0000-00-00");
        txt_old_licence_ex_date.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txt_old_licence_ex_date.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_old_licence_ex_dateKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addComponent(txtlicenno, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addGap(18, 18, 18)
                .addComponent(txtlicendate, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel18)
                .addGap(18, 18, 18)
                .addComponent(txtlicenvclass, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel36)
                .addGap(18, 18, 18)
                .addComponent(txt_old_licence_ex_date, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtlicenno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(txtlicendate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(txtlicenvclass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36)
                    .addComponent(txt_old_licence_ex_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtadmissiono.setEditable(false);
        txtadmissiono.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtadmissiono.setForeground(new java.awt.Color(204, 0, 0));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 153, 51));
        jLabel8.setText("Adress");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 51));
        jLabel5.setText("Sex");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 153, 51));
        jLabel14.setText("Vehicle Class");

        txttp2.setForeground(new java.awt.Color(0, 51, 204));
        try {
            txttp2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-#######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txttp2.setText("000-0000000");
        txttp2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txttp2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttp2ActionPerformed(evt);
            }
        });
        txttp2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txttp2KeyPressed(evt);
            }
        });

        txtadress.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtadress.setForeground(new java.awt.Color(0, 0, 204));
        txtadress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtadressActionPerformed(evt);
            }
        });
        txtadress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtadressKeyPressed(evt);
            }
        });

        txtbarcode.setForeground(new java.awt.Color(204, 0, 204));
        txtbarcode.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtbarcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbarcodeActionPerformed(evt);
            }
        });
        txtbarcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtbarcodeKeyPressed(evt);
            }
        });

        txttp3.setForeground(new java.awt.Color(0, 51, 204));
        try {
            txttp3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-#######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txttp3.setText("000-0000000");
        txttp3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txttp3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttp3ActionPerformed(evt);
            }
        });
        txttp3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txttp3KeyPressed(evt);
            }
        });

        txttp1.setForeground(new java.awt.Color(204, 0, 51));
        try {
            txttp1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-#######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txttp1.setText("000-0000000");
        txttp1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txttp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttp1ActionPerformed(evt);
            }
        });
        txttp1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txttp1KeyPressed(evt);
            }
        });

        txtnic.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtnic.setForeground(new java.awt.Color(204, 0, 51));
        txtnic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtnicKeyPressed(evt);
            }
        });

        txtname.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtname.setForeground(new java.awt.Color(0, 0, 204));
        txtname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtnameFocusLost(evt);
            }
        });
        txtname.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtnameInputMethodTextChanged(evt);
            }
        });
        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });
        txtname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtnameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtnameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnameKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 153, 51));
        jLabel11.setText("Tp3");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 51));
        jLabel2.setText("ID Type");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 153, 51));
        jLabel10.setText("Tp2");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 153, 51));
        jLabel12.setText("Barcode");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 153, 51));
        jLabel9.setText("Tp1");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 51));
        jLabel7.setText("Admission No");

        txtdob.setForeground(new java.awt.Color(0, 51, 204));
        try {
            txtdob.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtdob.setText("0000-00-00");
        txtdob.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtdob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdobActionPerformed(evt);
            }
        });
        txtdob.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtdobKeyPressed(evt);
            }
        });

        cmbsex.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmbsex.setForeground(new java.awt.Color(0, 153, 153));
        cmbsex.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));
        cmbsex.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbsexKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 51));
        jLabel3.setText("Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 51));
        jLabel4.setText("DOB");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 153, 51));
        jLabel6.setText("Name With Initials");

        txtnamewithinitials.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtnamewithinitials.setForeground(new java.awt.Color(0, 0, 204));
        txtnamewithinitials.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtnamewithinitialsKeyPressed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 153, 51));
        jLabel22.setText("Note");

        txtNote.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtNote.setForeground(new java.awt.Color(0, 0, 204));
        txtNote.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNoteKeyPressed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 153, 51));
        jLabel23.setText("Customer Type");

        cmb_Customer_type.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmb_Customer_type.setForeground(new java.awt.Color(0, 153, 153));
        cmb_Customer_type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--SELECT--", "NEW", "EXTEND", "RENEWAL" }));
        cmb_Customer_type.setSelectedIndex(1);
        cmb_Customer_type.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmb_Customer_typeKeyPressed(evt);
            }
        });

        cmb_id_type.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmb_id_type.setForeground(new java.awt.Color(0, 153, 153));
        cmb_id_type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--SELECT--", "NIC", "SL PASSPORT", "FOREING PASSPORT", "DIPLOMATIC PASSPORT" }));
        cmb_id_type.setSelectedIndex(1);
        cmb_id_type.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmb_id_typeKeyPressed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 153, 51));
        jLabel24.setText("Country of Identification");

        txt_country_of_identification.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txt_country_of_identification.setForeground(new java.awt.Color(0, 0, 204));
        txt_country_of_identification.setText("SRI LANKA");
        txt_country_of_identification.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_country_of_identificationKeyPressed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 153, 51));
        jLabel25.setText("Surname");

        txt_surname.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txt_surname.setForeground(new java.awt.Color(0, 0, 204));
        txt_surname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_surnameKeyPressed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 153, 51));
        jLabel26.setText("Height");

        txt_height_ft.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txt_height_ft.setForeground(new java.awt.Color(0, 51, 204));
        txt_height_ft.setText("0");
        txt_height_ft.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_height_ftKeyPressed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 153, 51));
        jLabel27.setText("Feet");

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(0, 153, 51));
        jLabel28.setText("Inch");

        txt_height_inch.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txt_height_inch.setForeground(new java.awt.Color(0, 51, 204));
        txt_height_inch.setText("0");
        txt_height_inch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_height_inchKeyPressed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 153, 51));
        jLabel29.setText("Blood Group");

        txt_blood_group.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txt_blood_group.setForeground(new java.awt.Color(0, 51, 204));
        txt_blood_group.setText("B+");
        txt_blood_group.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_blood_groupKeyPressed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 153, 51));
        jLabel30.setText("Driver Restrictions");

        cmb_driver_restrictions.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmb_driver_restrictions.setForeground(new java.awt.Color(0, 153, 153));
        cmb_driver_restrictions.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--SELECT--", "NONE", "SPECTACLE USER", "CORRECTIVE LENSES", "ARTIFICIAL LIMB" }));
        cmb_driver_restrictions.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmb_driver_restrictionsKeyPressed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 153, 51));
        jLabel31.setText("Organ Donor");

        cmb_organ_donor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmb_organ_donor.setForeground(new java.awt.Color(0, 153, 153));
        cmb_organ_donor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--SELECT--", "YES", "NO" }));
        cmb_organ_donor.setSelectedIndex(2);
        cmb_organ_donor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmb_organ_donorKeyPressed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(0, 153, 51));
        jLabel32.setText("NTM1 Certificate Date");

        txt_medical_date.setForeground(new java.awt.Color(0, 51, 204));
        try {
            txt_medical_date.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_medical_date.setText("0000-00-00");
        txt_medical_date.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txt_medical_date.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_medical_dateKeyPressed(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(0, 153, 51));
        jLabel33.setText("NTM1 Certificate No");

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(0, 153, 51));
        jLabel34.setText("Police Report Date");

        txt_police_report_date.setForeground(new java.awt.Color(0, 51, 204));
        try {
            txt_police_report_date.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_police_report_date.setText("0000-00-00");
        txt_police_report_date.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txt_police_report_date.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_police_report_dateKeyPressed(evt);
            }
        });

        lblImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImage.setText("Image");
        lblImage.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton7.setForeground(new java.awt.Color(204, 0, 204));
        jButton7.setText("Attach");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(0, 153, 51));
        jLabel37.setText("Other");

        cmb_Other.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmb_Other.setForeground(new java.awt.Color(0, 153, 153));
        cmb_Other.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--SELECT--", "NONE", "DUPLICATE", "CONVERSION", "EXTEND" }));
        cmb_Other.setSelectedIndex(1);
        cmb_Other.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmb_OtherKeyPressed(evt);
            }
        });

        txtmedicalno.setForeground(new java.awt.Color(0, 51, 204));
        txtmedicalno.setText("0000000000");
        txtmedicalno.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtmedicalno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmedicalnoActionPerformed(evt);
            }
        });
        txtmedicalno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtmedicalnoKeyPressed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton8.setForeground(new java.awt.Color(0, 51, 204));
        jButton8.setText("Open Camera");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        txtvehicleclass.setBackground(new java.awt.Color(255, 255, 51));
        txtvehicleclass.setForeground(new java.awt.Color(255, 0, 0));
        txtvehicleclass.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtvehicleclass.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtvehicleclass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtvehicleclassActionPerformed(evt);
            }
        });
        txtvehicleclass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtvehicleclassKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(cmb_Customer_type, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel37)
                        .addGap(18, 18, 18)
                        .addComponent(cmb_Other, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(jLabel7)
                        .addGap(26, 26, 26)
                        .addComponent(txtadmissiono, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(cmb_id_type, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(txtnic, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel12)
                        .addGap(4, 4, 4)
                        .addComponent(txtbarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel25)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(txt_country_of_identification, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jLabel22)
                                .addGap(23, 23, 23)
                                .addComponent(txtNote, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txt_surname, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtnamewithinitials, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtadress, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel5))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel9))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel10))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel11)))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtdob, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbsex, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txttp1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txttp2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txttp3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel26)
                            .addComponent(jLabel29)
                            .addComponent(jLabel30)
                            .addComponent(jLabel31))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addGap(3, 3, 3)
                                .addComponent(txt_height_ft, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jLabel28)
                                .addGap(4, 4, 4)
                                .addComponent(txt_height_inch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txt_blood_group, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_driver_restrictions, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_organ_donor, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtvehicleclass, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addGap(24, 24, 24)
                        .addComponent(txt_medical_date, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99)
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtmedicalno, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txt_police_report_date, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel23))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(cmb_Customer_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel37))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(cmb_Other, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel7))
                    .addComponent(txtadmissiono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel2))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(cmb_id_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtnic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel12))
                    .addComponent(txtbarcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_country_of_identification, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(jLabel22))
                                    .addComponent(txtNote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addComponent(txt_surname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(txtnamewithinitials, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(txtadress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(txtdob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(cmbsex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(txttp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(txttp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(txttp3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(txtvehicleclass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(9, 9, 9)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt_height_ft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txt_height_inch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGap(4, 4, 4)
                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel27)
                                                    .addComponent(jLabel28))))
                                        .addGap(11, 11, 11)
                                        .addComponent(txt_blood_group, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(11, 11, 11)
                                        .addComponent(cmb_driver_restrictions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(8, 8, 8)
                                        .addComponent(cmb_organ_donor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel24)
                                        .addGap(13, 13, 13)
                                        .addComponent(jLabel25)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel3)
                                        .addGap(21, 21, 21)
                                        .addComponent(jLabel6)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel8))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(13, 13, 13)
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel9)
                                        .addGap(21, 21, 21)
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel11))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addGap(13, 13, 13)
                                        .addComponent(jLabel26)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel29)
                                        .addGap(17, 17, 17)
                                        .addComponent(jLabel30)
                                        .addGap(14, 14, 14)
                                        .addComponent(jLabel31))
                                    .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel32))
                            .addComponent(txt_medical_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(txtmedicalno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel34))
                            .addComponent(txt_police_report_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel33)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Print use only", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12), new java.awt.Color(0, 153, 153))); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 153, 51));
        jLabel13.setText("Divisional Secretariat :");

        txtDivisionalSecretariat.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtDivisionalSecretariat.setForeground(new java.awt.Color(0, 51, 204));
        txtDivisionalSecretariat.setText("Not found");
        txtDivisionalSecretariat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDivisionalSecretariatKeyPressed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 153, 51));
        jLabel21.setText("Police station");

        txtpolice.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtpolice.setForeground(new java.awt.Color(0, 51, 204));
        txtpolice.setText("Not found");
        txtpolice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpoliceKeyPressed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(153, 0, 153));
        jButton3.setText("New");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(153, 0, 153));
        jButton4.setText("R");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(153, 0, 153));
        jButton5.setText("R");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton6.setForeground(new java.awt.Color(153, 0, 153));
        jButton6.setText("New");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDivisionalSecretariat, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addComponent(txtpolice, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton6)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13)
                                .addComponent(txtDivisionalSecretariat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel21)
                                .addComponent(txtpolice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton3)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(204, 0, 0));
        jButton1.setText("Submit");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        jButton2.setForeground(new java.awt.Color(153, 0, 153));
        jButton2.setText("Refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(132, 132, 132)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        submit();


    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtlicennoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtlicennoActionPerformed

    }//GEN-LAST:event_txtlicennoActionPerformed

    private void txtlicendateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtlicendateActionPerformed
        txtlicenvclass.grabFocus();
    }//GEN-LAST:event_txtlicendateActionPerformed

    private void txtlicenvclassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtlicenvclassActionPerformed

    }//GEN-LAST:event_txtlicenvclassActionPerformed

    private void txtmedicalnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmedicalnoActionPerformed


    }//GEN-LAST:event_txtmedicalnoActionPerformed

    private void txtlicenvclassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtlicenvclassKeyPressed
        if (evt.getKeyCode() == 10) {
            String changecase = txtlicenvclass.getText();
            String result = changecase.toUpperCase();
            txtlicenvclass.setText(result);
            txt_old_licence_ex_date.grabFocus();
            txt_old_licence_ex_date.selectAll();

        }
    }//GEN-LAST:event_txtlicenvclassKeyPressed

    private void txtmedicalnoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmedicalnoKeyPressed
        if (evt.getKeyCode() == 10) {
            txt_police_report_date.grabFocus();
            txt_police_report_date.selectAll();
        }
    }//GEN-LAST:event_txtmedicalnoKeyPressed

    private void txtlicennoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtlicennoKeyPressed
        if (evt.getKeyCode() == 10) {
            if (txtlicenno.getText().equals("")) {
                txtDivisionalSecretariat.grabFocus();
            } else {
                txtlicendate.grabFocus();
                txtlicendate.selectAll();
            }

        }
    }//GEN-LAST:event_txtlicennoKeyPressed

    private void txtlicendateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtlicendateKeyPressed
        if (evt.getKeyCode() == 10) {
            txtlicenvclass.grabFocus();
            txtlicenvclass.selectAll();
        }
    }//GEN-LAST:event_txtlicendateKeyPressed

    private void cmbcancantdriveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbcancantdriveKeyPressed
        if (evt.getKeyCode() == 10) {
            cmbmanualauto.grabFocus();

        }
    }//GEN-LAST:event_cmbcancantdriveKeyPressed

    private void cmbmanualautoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbmanualautoKeyPressed
        if (evt.getKeyCode() == 10) {
            txtlicenno.grabFocus();
            txtlicenno.selectAll();

        }
    }//GEN-LAST:event_cmbmanualautoKeyPressed

    private void txtDivisionalSecretariatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDivisionalSecretariatKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!txtDivisionalSecretariat.getText().equals("")) {
                txtpolice.grabFocus();
                txtpolice.selectAll();
            } else {
                com.Messages.warningjoption("Please enter Divisional Secretariat");
                return;

            }

        }
    }//GEN-LAST:event_txtDivisionalSecretariatKeyPressed

    private void txtpoliceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpoliceKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!txtpolice.getText().equals("")) {
//                jButton1.grabFocus();
                jButton8.grabFocus();
            } else {
                com.Messages.warningjoption("Please enter Police station");
                return;
            }

        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtpoliceKeyPressed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        submit();
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
        new customerRegisternew(ConstantData.home, false).setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new division(null, false).setVisible(true);

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        loadcmbdivision();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        loadpolice();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        new police(null, false).setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void txtNoteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoteKeyPressed
        if (evt.getKeyCode() == 10) {
            txt_surname.grabFocus();
        }
    }//GEN-LAST:event_txtNoteKeyPressed

    private void txtnamewithinitialsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnamewithinitialsKeyPressed
        if (evt.getKeyCode() == 10) {
            String changecase = txtnamewithinitials.getText();
            String result = changecase.toUpperCase();
            txtnamewithinitials.setText(result);
            txtadress.grabFocus();

        }
    }//GEN-LAST:event_txtnamewithinitialsKeyPressed

    private void cmbsexKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbsexKeyPressed
        if (evt.getKeyCode() == 10) {
            txttp1.grabFocus();
            txttp1.selectAll();

        }
    }//GEN-LAST:event_cmbsexKeyPressed

    private void txtdobKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdobKeyPressed
        if (evt.getKeyCode() == 10) {

            cmbsex.grabFocus();
        }
    }//GEN-LAST:event_txtdobKeyPressed

    private void txtdobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdobActionPerformed

    }//GEN-LAST:event_txtdobActionPerformed

    private void txtnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnameKeyTyped

    }//GEN-LAST:event_txtnameKeyTyped

    private void txtnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnameKeyReleased

    }//GEN-LAST:event_txtnameKeyReleased

    private void txtnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnameKeyPressed
        if (evt.getKeyCode() == 10) {
            String changecase = txtname.getText();
            String result = changecase.toUpperCase();
            txtname.setText(result);
            txtnamewithinitials.grabFocus();

        }
    }//GEN-LAST:event_txtnameKeyPressed

    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed

    }//GEN-LAST:event_txtnameActionPerformed

    private void txtnameInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtnameInputMethodTextChanged

    }//GEN-LAST:event_txtnameInputMethodTextChanged

    private void txtnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtnameFocusLost

    }//GEN-LAST:event_txtnameFocusLost

    private void txtnicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnicKeyPressed
        if (evt.getKeyCode() == 10) {
//            if (isNotIDAlreadyExistInDB()) {
//                txtbarcode.grabFocus();
//
//            }
            loaddetails();
            txtbarcode.grabFocus();

        }
    }//GEN-LAST:event_txtnicKeyPressed

    private void txttp1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttp1KeyPressed

        if (evt.getKeyCode() == 10) {
            txttp2.grabFocus();
            txttp2.selectAll();

        }
    }//GEN-LAST:event_txttp1KeyPressed

    private void txttp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttp1ActionPerformed

    }//GEN-LAST:event_txttp1ActionPerformed

    private void txtvehicleclassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtvehicleclassKeyPressed
        if (evt.getKeyCode() == 10) {
            String changecase = txtvehicleclass.getText();
            String result = changecase.toUpperCase();
            txtvehicleclass.setText(result);
            txt_height_ft.grabFocus();
            txt_height_ft.selectAll();
        }
    }//GEN-LAST:event_txtvehicleclassKeyPressed

    private void txtvehicleclassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtvehicleclassActionPerformed

    }//GEN-LAST:event_txtvehicleclassActionPerformed

    private void txttp3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttp3KeyPressed
        if (evt.getKeyCode() == 10) {
            txtvehicleclass.grabFocus();
        }
    }//GEN-LAST:event_txttp3KeyPressed

    private void txttp3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttp3ActionPerformed

    }//GEN-LAST:event_txttp3ActionPerformed

    private void txtbarcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbarcodeKeyPressed
        if (evt.getKeyCode() == 10) {
            txt_country_of_identification.grabFocus();
            txt_country_of_identification.selectAll();
        }
    }//GEN-LAST:event_txtbarcodeKeyPressed

    private void txtbarcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbarcodeActionPerformed

    }//GEN-LAST:event_txtbarcodeActionPerformed

    private void txtadressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtadressKeyPressed
        if (evt.getKeyCode() == 10) {
            String changecase = txtadress.getText();
            String result = changecase.toUpperCase();
            txtadress.setText(result);
            txtdob.grabFocus();
            txtdob.selectAll();

        }
    }//GEN-LAST:event_txtadressKeyPressed

    private void txtadressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtadressActionPerformed

    }//GEN-LAST:event_txtadressActionPerformed

    private void txttp2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttp2KeyPressed
        if (evt.getKeyCode() == 10) {
            txttp3.grabFocus();
            txttp3.selectAll();
        }
    }//GEN-LAST:event_txttp2KeyPressed

    private void txttp2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttp2ActionPerformed

    }//GEN-LAST:event_txttp2ActionPerformed

    private void cmb_Customer_typeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmb_Customer_typeKeyPressed
        if (evt.getKeyCode() == 10) {

            if (cmb_Customer_type.getSelectedIndex() != 0) {
                cmb_Other.grabFocus();
            } else {

                com.Messages.warningjoption("Please select Customer Type");
                return;

            }

        }
    }//GEN-LAST:event_cmb_Customer_typeKeyPressed

    private void cmb_OtherKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmb_OtherKeyPressed
        if (evt.getKeyCode() == 10) {
            if (cmb_Other.getSelectedIndex() != 0) {
                cmb_id_type.grabFocus();

            } else {
                com.Messages.warningjoption("Please select Other Type");
                return;
            }

        }
    }//GEN-LAST:event_cmb_OtherKeyPressed

    private void cmb_id_typeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmb_id_typeKeyPressed
        if (evt.getKeyCode() == 10) {
            if (cmb_id_type.getSelectedIndex() != 0) {

                txtnic.grabFocus();
            } else {
                com.Messages.warningjoption("Please select ID Type");
                return;
            }

        }
    }//GEN-LAST:event_cmb_id_typeKeyPressed

    private void txt_country_of_identificationKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_country_of_identificationKeyPressed
        if (evt.getKeyCode() == 10) {
            txtNote.grabFocus();

        }
    }//GEN-LAST:event_txt_country_of_identificationKeyPressed

    private void txt_surnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_surnameKeyPressed
        if (evt.getKeyCode() == 10) {
            txtname.grabFocus();

        }
    }//GEN-LAST:event_txt_surnameKeyPressed

    private void txt_height_ftKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_height_ftKeyPressed
        if (evt.getKeyCode() == 10) {
            txt_height_inch.grabFocus();
            txt_height_inch.selectAll();

        }
    }//GEN-LAST:event_txt_height_ftKeyPressed

    private void txt_height_inchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_height_inchKeyPressed
        if (evt.getKeyCode() == 10) {
            txt_blood_group.grabFocus();
            txt_blood_group.selectAll();

        }
    }//GEN-LAST:event_txt_height_inchKeyPressed

    private void txt_blood_groupKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_blood_groupKeyPressed
        if (evt.getKeyCode() == 10) {
            cmb_driver_restrictions.grabFocus();

        }
    }//GEN-LAST:event_txt_blood_groupKeyPressed

    private void cmb_driver_restrictionsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmb_driver_restrictionsKeyPressed
        if (evt.getKeyCode() == 10) {

            if (cmb_driver_restrictions.getSelectedIndex() != 0) {
                cmb_organ_donor.grabFocus();

            } else {
                com.Messages.warningjoption("Please select Driver Restrictions");
                return;

            }

        }
    }//GEN-LAST:event_cmb_driver_restrictionsKeyPressed

    private void cmb_organ_donorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmb_organ_donorKeyPressed
        if (evt.getKeyCode() == 10) {
            if (cmb_organ_donor.getSelectedIndex() != 0) {
                txt_medical_date.grabFocus();
                txt_medical_date.selectAll();
            } else {
                com.Messages.warningjoption("Please select Organ donor or not");
                return;

            }

        }
    }//GEN-LAST:event_cmb_organ_donorKeyPressed

    private void txt_old_licence_ex_dateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_old_licence_ex_dateKeyPressed
        if (evt.getKeyCode() == 10) {
            txtDivisionalSecretariat.grabFocus();
            txtDivisionalSecretariat.selectAll();

        }
    }//GEN-LAST:event_txt_old_licence_ex_dateKeyPressed

    private void txt_medical_dateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_medical_dateKeyPressed
        if (evt.getKeyCode() == 10) {
            txtmedicalno.grabFocus();
            txtmedicalno.selectAll();

        }
    }//GEN-LAST:event_txt_medical_dateKeyPressed

    private void txt_police_report_dateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_police_report_dateKeyPressed
        if (evt.getKeyCode() == 10) {
            cmbcancantdrive.grabFocus();

        }
    }//GEN-LAST:event_txt_police_report_dateKeyPressed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        JFileChooser chooser = new JFileChooser();
        // chooser.setCurrentDirectory(new File(System.getProperty("user.dir" + "/Desktop")));
        chooser.setCurrentDirectory(new File("C:\\images"));
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename = f.getAbsolutePath();
        //  lblImage.setIcon((ResizeImage(filename)));
        imagepath = filename;
        System.out.println(imagepath);
        // ImageIcon iconLogo = new ImageIcon(imagepath);
        ImageIcon imageIcon = new ImageIcon(new ImageIcon(filename).getImage().getScaledInstance(160, 120, Image.SCALE_DEFAULT));
        lblImage.setIcon(imageIcon);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        new Snapshot().setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(customerRegisternew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(customerRegisternew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(customerRegisternew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(customerRegisternew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                customerRegisternew dialog = new customerRegisternew(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JComboBox cmb_Customer_type;
    private javax.swing.JComboBox cmb_Other;
    private javax.swing.JComboBox cmb_driver_restrictions;
    private javax.swing.JComboBox cmb_id_type;
    private javax.swing.JComboBox cmb_organ_donor;
    private javax.swing.JComboBox cmbcancantdrive;
    private javax.swing.JComboBox cmbmanualauto;
    private javax.swing.JComboBox cmbsex;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel lblImage;
    private javax.swing.JTextField txtDivisionalSecretariat;
    private javax.swing.JTextField txtNote;
    private javax.swing.JTextField txt_blood_group;
    private javax.swing.JTextField txt_country_of_identification;
    private javax.swing.JTextField txt_height_ft;
    private javax.swing.JTextField txt_height_inch;
    private javax.swing.JFormattedTextField txt_medical_date;
    private javax.swing.JFormattedTextField txt_old_licence_ex_date;
    private javax.swing.JFormattedTextField txt_police_report_date;
    private javax.swing.JTextField txt_surname;
    private javax.swing.JTextField txtadmissiono;
    private javax.swing.JTextField txtadress;
    private javax.swing.JFormattedTextField txtbarcode;
    private javax.swing.JFormattedTextField txtdob;
    private javax.swing.JFormattedTextField txtlicendate;
    private javax.swing.JTextField txtlicenno;
    private javax.swing.JFormattedTextField txtlicenvclass;
    private javax.swing.JFormattedTextField txtmedicalno;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtnamewithinitials;
    private javax.swing.JTextField txtnic;
    private javax.swing.JTextField txtpolice;
    private javax.swing.JFormattedTextField txttp1;
    private javax.swing.JFormattedTextField txttp2;
    private javax.swing.JFormattedTextField txttp3;
    private javax.swing.JFormattedTextField txtvehicleclass;
    // End of variables declaration//GEN-END:variables

    private void loadadmissiono() {
        //get id for admission no from customer register
        try {
            ResultSet rs = model.db.getData("SELECT MAX(id) FROM customer_register");
            if (rs.next()) {
                int i = rs.getInt(1);
                txtadmissiono.setText(String.valueOf(i + 5001));
                customerId = i + 5001;
                System.out.println(customerId);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        ///////////////////////////////////////////////////////////////////////////////////
    }

    private boolean isNotIDAlreadyExistInDB() {
        boolean bol = true;
        try {
            ResultSet rs = model.db.getData("SELECT\n"
                    + "uniquecustomerdetails.nic\n"
                    + "FROM\n"
                    + "uniquecustomerdetails\n"
                    + "WHERE\n"
                    + "uniquecustomerdetails.nic = '" + txtnic.getText() + "'");
            if (rs.next()) {
                bol = false;
                Messages.errorjoption("This NIC Number Already Exist ! ");
                txtnic.grabFocus();
                txtnic.selectAll();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        return bol;
    }

    private void loaddetails() {
        try {
            ResultSet rs = model.db.getData("SELECT\n"
                    + "uniquecustomerdetails.id,\n"
                    + "uniquecustomerdetails.nic,\n"
                    + "uniquecustomerdetails.`name`,\n"
                    + "uniquecustomerdetails.dob,\n"
                    + "uniquecustomerdetails.sex,\n"
                    + "uniquecustomerdetails.`status`,\n"
                    + "uniquecustomerdetails.namewithinitial\n"
                    + "FROM\n"
                    + "uniquecustomerdetails\n"
                    + "WHERE\n"
                    + "uniquecustomerdetails.nic = '" + txtnic.getText() + "'");
            if (rs.next()) {
               // id = rs.getInt(1);
                System.out.println(id);
                txtname.setText(rs.getString(3));
                txtdob.setText(rs.getString(4));
                cmbsex.setSelectedItem(rs.getString(5));
                txtnamewithinitials.setText(rs.getString(7));
//                if (rs.getString(5).equals("Male")) {
//                    rbtnmale.setSelected(true);
//                } else if (rs.getString(5).equals("Female")) {
//                    rbtnfemale.setSelected(true);
//                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void submit() {
        
        
        boolean bol = true;
        //canDriveOrNot
//        if (rbtncandrive.isSelected()) {
//            canDriveOrNot = "Can Drive";
//        } else if (rbtncantdrive.isSelected()) {
//            canDriveOrNot = "Cannot Drive";
//        }

        ///////////////////////////////////////////////////////////////////////////////////
        //manualOrAuto
//        if (rbtnmanual.isSelected()) {
//            manualOrAuto = "Manual";
//        } else if (rbtnauto.isSelected()) {
//            manualOrAuto = "Auto";
//        }
        ///////////////////////////////////////////////////////////////////////////////////////
        //male female
//        if (rbtnmale.isSelected()) {
//            sex = "Male";
//
//        } else if (rbtnfemale.isSelected()) {
//            sex = "Female";
//        }
        ///////////////////////////////////////////////////////////////////////////////////////
        //get uniqueCustomerDetails_id
        try {
            ResultSet rs = model.db.getData("SELECT MAX(id) FROM uniquecustomerdetails");
            if (rs.next()) {
                uniqueCustomerDetails_id = rs.getInt(1) + 1;

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        ////////////////////////////////////////////////////////////////////////////////////////

        /////////////////////division id////////////////////////////////
        try {
            ResultSet rs = model.db.getData("SELECT\n"
                    + "division.id\n"
                    + "FROM\n"
                    + "division\n"
                    + "WHERE\n"
                    + "division.division = '" + txtDivisionalSecretariat.getText() + "'");
            if (rs.next()) {
                divisionId = rs.getInt(1);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        //////////////////////end division id///////////////////////
        ////////////////////get police id/////////////////////////
        try {
            ResultSet rs = model.db.getData("SELECT\n"
                    + "police.id\n"
                    + "FROM\n"
                    + "police\n"
                    + "WHERE\n"
                    + "police.police = '" + txtpolice.getText() + "'");
            if (rs.next()) {
                policeId = rs.getInt(1);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        //////////////////end police id////////////////////////
        loadadmissiono();
        if (txtnic.getText().isEmpty()) {
            com.Messages.errorjoption("Enter the NIC!");
            txtnic.grabFocus();
            return;
        }
        if (txtname.getText().isEmpty()) {
            com.Messages.errorjoption("Enter the Name!");
            txtname.grabFocus();
            return;

        }
        if (txtnamewithinitials.getText().isEmpty()) {
            com.Messages.errorjoption("Enter the Name with initials!");
            txtname.grabFocus();
            return;

        }

        if (txttp1.getText().isEmpty()) {
            com.Messages.errorjoption("Enter the TP1!");
            txttp1.grabFocus();
            return;

        }
        if (txtvehicleclass.getText().isEmpty()) {
            com.Messages.errorjoption("Enter the Vehicle class!");
            txtvehicleclass.grabFocus();
            return;

        }
        if (txtdob.getText().isEmpty()) {
            com.Messages.errorjoption("Enter the DOB!");
            txtdob.grabFocus();
            return;

        } else {
            if (id == 0) {
                Connection con = db2.getconn();
                try {

                    //unique details send
                    model.db2.putData("INSERT INTO uniquecustomerdetails(nic,name,dob,sex,status,namewithinitial,last_name,blood_group)values('" + txtnic.getText() + "',"
                            + "'" + txtname.getText().toUpperCase() + "','" + txtdob.getText() + "','" + cmbsex.getSelectedItem() + "','" + "New" + "',"
                            + "'" + txtnamewithinitials.getText().toUpperCase() + "','" + txt_surname.getText().toUpperCase() + "','" + txt_blood_group.getText().toUpperCase() + "')");

                    if (con != null) {
                        con.commit();

                    }
                    Connection conn = DriverManager.getConnection(dbConnectionURL, ConstantData.dbUsername, ConstantData.dbPassword);
                    InputStream inputStream = null;
                    try {
                        inputStream = new FileInputStream(new File(imagepath));
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(customerRegister.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    String sql = "UPDATE uniquecustomerdetails SET face= ? WHERE id='" + uniqueCustomerDetails_id + "'  ";
                    PreparedStatement statement = conn.prepareStatement(sql);
                    statement.setBlob(1, inputStream);
                    statement.executeUpdate();

                    ////////////////////////////////
                    //repeat data
                    model.db2.putData("INSERT INTO customer_register(uniqueCustomerDetails_id,admission_no,adress,tp1,tp2,tp3,"
                            + "barcode,reg_date,vehicle_class,medicalNo,licenNo,licenDate,vclass,canDriveOrNot,manualOrAuto,"
                            + "status,nic,division_id,police_id,note,customer_type,other_DCE,id_type,country_of_identification,medical_date,police_report_date,"
                            + "old_licence_expire_date,driver_restrictions,organ_donor,height_ft,height_inch)values"
                            + "('" + uniqueCustomerDetails_id + "','" + customerId + "','" + txtadress.getText().toUpperCase() + "',"
                            + "'" + txttp1.getText() + "','" + txttp2.getText() + "','" + txttp3.getText() + "','" + txtbarcode.getText() + "',"
                            + " NOW(),'" + txtvehicleclass.getText().toUpperCase() + "','" + txtmedicalno.getText() + "','" + txtlicenno.getText() + "',"
                            + "'" + txtlicendate.getText() + "','" + txtlicenvclass.getText().toUpperCase() + "','" + cmbcancantdrive.getSelectedItem() + "',"
                            + "'" + cmbmanualauto.getSelectedItem() + "','" + "new" + "','" + txtnic.getText() + "','" + divisionId + "','" + policeId + "',"
                            + "'" + txtNote.getText() + "','" + cmb_Customer_type.getSelectedItem() + "','" + cmb_Other.getSelectedItem() + "','" + cmb_id_type.getSelectedItem() + "',"
                            + "'" + txt_country_of_identification.getText() + "','" + txt_medical_date.getText() + "','" + txt_police_report_date.getText() + "',"
                            + "'" + txt_old_licence_ex_date.getText() + "','" + cmb_driver_restrictions.getSelectedItem() + "','" + cmb_organ_donor.getSelectedItem() + "',"
                            + "'" + txt_height_ft.getText() + "','" + txt_height_inch.getText() + "')");

                    ///////////////////////////////////////////
                    //log
                    model.db2.putData("INSERT INTO log(date,description,username)values(NOW(),'" + "new user register" + "',"
                            + "'" + userstatus.LodUser + "')");

                    ////////////////////////////////////////////////////////////////////////
                    if (con != null) {
                        con.commit();

                    }
                    Messages.normaljoption("Data Saved!");
                } catch (SQLException ex) {
                    try {
                        bol = false;
                        com.Messages.warningjoption("Please Check Again! ");
                        //  db2.getconn().rollback();
                        System.out.println("rollbacked");
                        con.rollback();

                    } catch (SQLException ex1) {
                        Logger.getLogger(customerRegisternew.class.getName()).log(Level.SEVERE, null, ex1);
                    }
                    ex.printStackTrace();

                }
                 

            } else {
                //Connection con=db2.getconn();
                try {
                    //unique details send
//                    model.db.putData("INSERT INTO uniquecustomerdetails(nic,name,dob,sex,status)values('" + txtnic.getText() + "',"
//                            + "'" + txtname.getText() + "','" + txtdob.getText() + "','" + sex + "','" + "New" + "')");

                    ////////////////////////////////
                    //repeat data
                    model.db.putData("INSERT INTO customer_register(uniqueCustomerDetails_id,admission_no,adress,tp1,tp2,tp3,"
                            + "barcode,reg_date,vehicle_class,medicalNo,licenNo,licenDate,vclass,canDriveOrNot,manualOrAuto,"
                            + "status,nic,division_id,police_id)values('" + id + "','" + customerId + "','" + txtadress.getText() + "',"
                            + "'" + txttp1.getText() + "','" + txttp2.getText() + "','" + txttp3.getText() + "','" + txtbarcode.getText() + "',"
                            + " NOW(),'" + txtvehicleclass.getText().toUpperCase() + "','" + txtmedicalno.getText() + "','" + txtlicenno.getText() + "',"
                            + "'" + txtlicendate.getText() + "','" + txtlicenvclass.getText().toUpperCase() + "','" + cmbcancantdrive.getSelectedItem() + "',"
                            + "'" + cmbmanualauto.getSelectedItem() + "','" + "new" + "','" + txtnic.getText() + "',division_id='" + divisionId + "',police_id='" + policeId + "')");

                    ///////////////////////////////////////////
                    //log
                    model.db.putData("INSERT INTO log(date,description,username)values(NOW(),'" + "new user register" + "',"
                            + "'" + userstatus.LodUser + "')");

                    ////////////////////////////////////////////////////////////////////////
//                      if(con!=null){
//                    con.commit();
//                    
//                    }
                    Messages.normaljoption("Data Saved!");
                } catch (SQLException ex) {

//                     try {
//                           //  db2.getconn().rollback();
//                         
//                         bol=false;
//                         com.Messages.warningjoption("Please Check Again! ");
//                         
//                           System.out.println("rollbacked");
//                           
//                           
//                           con.rollback();
//                           
//                          
//                       } catch (SQLException ex1) {
//                           Logger.getLogger(customerRegisternew.class.getName()).log(Level.SEVERE, null, ex1);
//                       }
                    //setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    ex.printStackTrace();
                }

            }
        }
        if (bol) {
           
            this.dispose();
            new customerRegisternew(null, false).setVisible(true);
            new downPayment(txtadmissiono.getText()).setVisible(true);
           
            printapplication();

        }

    }

    private void printapplication() {

        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        try {
            //JRTableModelDataSource dataSource;
            // dataSource = new JRTableModelDataSource(tbl_Gin.getModel());
            //String reportSource = "c:\\reports\\viewInvoice.jrxml";
            String reportSource = "src/reports/application_new.jrxml";
            Map<String, Object> params = new HashMap<String, Object>();

//            params.put("nic", String.valueOf(txtnic.getText()));
//            params.put("name", String.valueOf(txtname.getText()));
//            params.put("dob", String.valueOf(txtdob.getText()));
//
//            params.put("sex", String.valueOf(cmbsex.getSelectedItem()));
//            params.put("adress", String.valueOf(txtadress.getText()));
//            params.put("vclass", String.valueOf(txtvehicleclass.getText()));
//            params.put("divisionals", String.valueOf(txtDivisionalSecretariat.getText()));
//            params.put("police", String.valueOf(txtpolice.getText()));
//            params.put("oldlicenNO", String.valueOf(txtlicenno.getText()));
//            params.put("oldlicenIssuedate", String.valueOf(txtlicendate.getText()));
//            params.put("oldlicenceVclass", String.valueOf(txtlicenvclass.getText()));
//            params.put("admissionno", String.valueOf(txtadmissiono.getText()));
            DateFormat dateFormat = new SimpleDateFormat("yyyy");
            Date date = new Date();
            String currentyear = dateFormat.format(date);
            String birthday = txtdob.getText();
            String parts[] = birthday.split("-");
            String part1 = parts[0];

            int age = Integer.parseInt(currentyear) - Integer.parseInt(part1);

            params.put("customer_type", String.valueOf(cmb_Customer_type.getSelectedItem().toString().replaceAll("", " ").trim()));
            params.put("other_type", String.valueOf(cmb_Other.getSelectedItem().toString().replaceAll("", " ").trim()));
            params.put("id_type", String.valueOf(cmb_id_type.getSelectedItem().toString().replaceAll("", " ").trim()));
            params.put("barcode", String.valueOf(txtbarcode.getText().replaceAll("", " ").trim()));
            params.put("nic", String.valueOf(txtnic.getText().replaceAll("", " ").trim()));
            params.put("country_of_identify", String.valueOf(txt_country_of_identification.getText().replaceAll("", " ").trim()));
            params.put("last_name", String.valueOf(txt_surname.getText().replaceAll("", " ").trim()));
            params.put("name", String.valueOf(txtname.getText().replaceAll("", " ").trim()));
            params.put("name_with_ini", String.valueOf(txtnamewithinitials.getText().replaceAll("", " ").trim()));
            params.put("dob", String.valueOf(txtdob.getText().replaceAll("", " ").trim()));
            params.put("age", String.valueOf(String.valueOf(age).replaceAll("", " ").trim()));
            params.put("ft", String.valueOf(txt_height_ft.getText().replaceAll("", " ").trim()));
            params.put("inch", String.valueOf(txt_height_inch.getText().replaceAll("", " ").trim()));

            params.put("sex", String.valueOf(cmbsex.getSelectedItem().toString().replaceAll("", " ").trim()));
            params.put("adress", String.valueOf(txtadress.getText().replaceAll("", " ").trim()));
            params.put("vclass", String.valueOf(txtvehicleclass.getText().replaceAll("", " ").trim()));
            params.put("divisionals", String.valueOf(txtDivisionalSecretariat.getText().replaceAll("", " ").trim()));
            params.put("police", String.valueOf(txtpolice.getText().replaceAll("", " ").trim()));
            params.put("driver_restrictions", String.valueOf(cmb_driver_restrictions.getSelectedItem().toString().replaceAll("", " ").trim()));
            params.put("organ", String.valueOf(cmb_organ_donor.getSelectedItem().toString().replaceAll("", " ").trim()));

            params.put("certificate_no", String.valueOf(txtmedicalno.getText().replaceAll("", " ").trim()));
            params.put("certificate_date", String.valueOf(txt_medical_date.getText().replaceAll("", " ").trim()));
            params.put("police_report_date", String.valueOf(txt_police_report_date.getText().replaceAll("", " ").trim()));
            params.put("oldlicenNO", String.valueOf(txtlicenno.getText().replaceAll("", " ").trim()));
            params.put("oldlicenIssuedate", String.valueOf(txtlicendate.getText().replaceAll("", " ").trim()));
            params.put("old_license_ex_date", String.valueOf(txt_old_licence_ex_date.getText().replaceAll("", " ").trim()));
            params.put("oldlicenceVclass", String.valueOf(txtlicenvclass.getText().replaceAll("", " ").trim()));
            params.put("admissionno", String.valueOf(txtadmissiono.getText().replaceAll("", " ").trim()));

            JasperReport jasperReport = JasperCompileManager.compileReport(reportSource);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, params);

            // JasperViewer.viewReport(jasperPrint, false);
            JasperViewer.viewReport(jasperPrint, false);
            JasperPrintManager.printReport(jasperPrint, true);

            // JasperPrintManager.printReport(jasperPrint, false);
            // this.dispose();
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        } catch (Exception e) {
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            e.printStackTrace();
        }
    }

    private void loadcmbdivision() {
        //  DefaultComboBoxModel dcbm=(DefaultComboBoxModel) cmbdivision.getModel();
        //  dcbm.removeAllElements();
        List<String> li = new ArrayList<String>();
        try {
            ResultSet rs = model.db.getData("SELECT\n"
                    + "division.id,\n"
                    + "division.division\n"
                    + "FROM\n"
                    + "division");

            while (rs.next()) {
                li.add(rs.getString(2));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        AutoCompleteDecorator.decorate(txtDivisionalSecretariat, li, true);
    }

    private void loadpolice() {
        List<String> li = new ArrayList<String>();
        try {
            ResultSet rs = model.db.getData("SELECT\n"
                    + "police.id,\n"
                    + "police.police\n"
                    + "FROM\n"
                    + "police");

            while (rs.next()) {
                li.add(rs.getString(2));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        AutoCompleteDecorator.decorate(txtpolice, li, true);
    }

}
